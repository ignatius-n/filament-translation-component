This file is a merged representation of a subset of the codebase, containing files not matching ignore patterns, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching these patterns are excluded: **/*.log, tmp/, .js, .html, .blade.php, .css, public/, vendor/, node_modules
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
.github/
  ISSUE_TEMPLATE/
    bug.yml
    config.yml
  workflows/
    dependabot-auto-merge.yml
    fix-php-code-styling.yml
    tests.yml
  CONTRIBUTING.md
  dependabot.yml
  FUNDING.yml
  SECURITY.md
config/
  filament-translation-component.php
resources/
  lang/
    ar/
      messages.php
    bg/
      messages.php
    bn/
      messages.php
    cs/
      messages.php
    da/
      messages.php
    de/
      messages.php
    el/
      messages.php
    en/
      messages.php
    es/
      messages.php
    et/
      messages.php
    fa/
      messages.php
    fi/
      messages.php
    fil/
      messages.php
    fr/
      messages.php
    hi/
      messages.php
    hr/
      messages.php
    hu/
      messages.php
    id/
      messages.php
    it/
      messages.php
    ja/
      messages.php
    ko/
      messages.php
    lt/
      messages.php
    lv/
      messages.php
    ms/
      messages.php
    my/
      messages.php
    nl/
      messages.php
    no/
      messages.php
    pl/
      messages.php
    pt_BR/
      messages.php
    ro/
      messages.php
    ru/
      messages.php
    sk/
      messages.php
    sr/
      messages.php
    sv/
      messages.php
    th/
      messages.php
    uk/
      messages.php
    ur/
      messages.php
    vi/
      messages.php
    zh/
      messages.php
  views/
    components/
      translation.blade.php
src/
  Components/
    Translation.php
  FilamentTranslationComponentServiceProvider.php
tests/
  database/
    factories/
      UserFactory.php
    seeders/
      UserSeed.php
  src/
    Models/
      User.php
    AdminPanelProvider.php
    DebugTest.php
    TestCase.php
  Pest.php
.gitignore
.php-cs-fixer.dist.php
CODE_OF_CONDUCT.md
composer.json
fadymondy-translation-component.md
LICENSE.md
phpunit.xml
pint.json
README.md
testbench.yaml
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".github/ISSUE_TEMPLATE/bug.yml">
name: Bug Report
description: Report an Issue or Bug with the Package
title: "[Bug]: "
labels: ["bug"]
body:
  - type: markdown
    attributes:
      value: |
        We're sorry to hear you have a problem. Can you help us solve it by providing the following details.
  - type: textarea
    id: what-happened
    attributes:
      label: What happened?
      description: What did you expect to happen?
      placeholder: I cannot currently do X thing because when I do, it breaks X thing.
    validations:
      required: true
  - type: textarea
    id: how-to-reproduce
    attributes:
      label: How to reproduce the bug
      description: How did this occur, please add any config values used and provide a set of reliable steps if possible.
      placeholder: When I do X I see Y.
    validations:
      required: true
  - type: input
    id: package-version
    attributes:
      label: Package Version
      description: What version of our Package are you running? Please be as specific as possible
      placeholder: 2.0.0
    validations:
      required: true
  - type: input
    id: php-version
    attributes:
      label: PHP Version
      description: What version of PHP are you running? Please be as specific as possible
      placeholder: 8.2.0
    validations:
      required: true
  - type: input
    id: laravel-version
    attributes:
      label: Laravel Version
      description: What version of Laravel are you running? Please be as specific as possible
      placeholder: 9.0.0
    validations:
      required: true
  - type: dropdown
    id: operating-systems
    attributes:
      label: Which operating systems does with happen with?
      description: You may select more than one.
      multiple: true
      options:
        - macOS
        - Windows
        - Linux
  - type: textarea
    id: notes
    attributes:
      label: Notes
      description: Use this field to provide any other notes that you feel might be relevant to the issue.
    validations:
      required: false
</file>

<file path=".github/ISSUE_TEMPLATE/config.yml">
blank_issues_enabled: false
contact_links:
  - name: Ask a question
    url: https://github.com/tomatophp/filament-translation-component/discussions/new?category=q-a
    about: Ask the community for help
  - name: Request a feature
    url: https://github.com/tomatophp/filament-translation-component/discussions/new?category=ideas
    about: Share ideas for new features
  - name: Report a security issue
    url: https://github.com/tomatophp/filament-translation-component/security/policy
    about: Learn how to notify us for sensitive bugs
</file>

<file path=".github/workflows/dependabot-auto-merge.yml">
name: dependabot-auto-merge
on: pull_request_target

permissions:
  pull-requests: write
  contents: write

jobs:
  dependabot:
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:

      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2.4.0
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Auto-merge Dependabot PRs for semver-minor updates
        if: ${{steps.metadata.outputs.update-type == 'version-update:semver-minor'}}
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Auto-merge Dependabot PRs for semver-patch updates
        if: ${{steps.metadata.outputs.update-type == 'version-update:semver-patch'}}
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
</file>

<file path=".github/CONTRIBUTING.md">
# Contributing

Contributions are **welcome** and will be fully **credited**.

Please read and understand the contribution guide before creating an issue or pull request.

## Etiquette

This project is open source, and as such, the maintainers give their free time to build and maintain the source code
held within. They make the code freely available in the hope that it will be of use to other developers. It would be
extremely unfair for them to suffer abuse or anger for their hard work.

Please be considerate towards maintainers when raising issues or presenting pull requests. Let's show the
world that developers are civilized and selfless people.

It's the duty of the maintainer to ensure that all submissions to the project are of sufficient
quality to benefit the project. Many developers have different skills, strengths, and weaknesses. Respect the maintainer's decision, and do not be upset or abusive if your submission is not used.

## Viability

When requesting or submitting new features, first consider whether it might be useful to others. Open
source projects are used by many developers, who may have entirely different needs to your own. Think about
whether or not your feature is likely to be used by other users of the project.

## Procedure

Before filing an issue:

- Attempt to replicate the problem, to ensure that it wasn't a coincidental incident.
- Check to make sure your feature suggestion isn't already present within the project.
- Check the pull requests tab to ensure that the bug doesn't have a fix in progress.
- Check the pull requests tab to ensure that the feature isn't already in progress.

Before submitting a pull request:

- Check the codebase to ensure that your feature doesn't already exist.
- Check the pull requests to ensure that another person hasn't already submitted the feature or fix.

## Requirements

If the project maintainer has any additional requirements, you will find them listed here.

- **[PSR-2 Coding Standard](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md)** - The easiest way to apply the conventions is to install [PHP Code Sniffer](https://pear.php.net/package/PHP_CodeSniffer).

- **Add tests!** - Your patch won't be accepted if it doesn't have tests.

- **Document any change in behaviour** - Make sure the `README.md` and any other relevant documentation are kept up-to-date.

- **Consider our release cycle** - We try to follow [SemVer v2.0.0](https://semver.org/). Randomly breaking public APIs is not an option.

- **One pull request per feature** - If you want to do more than one thing, send multiple pull requests.

- **Send coherent history** - Make sure each individual commit in your pull request is meaningful. If you had to make multiple intermediate commits while developing, please [squash them](https://www.git-scm.com/book/en/v2/Git-Tools-Rewriting-History#Changing-Multiple-Commit-Messages) before submitting.

**Happy coding**!
</file>

<file path=".github/dependabot.yml">
# Please see the documentation for all configuration options:
# https://help.github.com/github/administering-a-repository/configuration-options-for-dependency-updates

version: 2
updates:

  - package-ecosystem: "github-actions"
    directory: "/"
    schedule:
      interval: "weekly"
    labels:
      - "dependencies"
</file>

<file path=".github/SECURITY.md">
# Security Policy

If you discover any security related issues, please email info@3x1.io instead of using the issue tracker.
</file>

<file path="resources/lang/bg/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Translation',
];
</file>

<file path="resources/lang/bn/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Translation',
];
</file>

<file path="resources/lang/cs/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Translation',
];
</file>

<file path="resources/lang/da/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/de/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/el/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/es/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/et/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/fa/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/fi/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/fil/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/fr/messages.php">
<?php

return [
    'ar' => 'Arabe',
    'en' => 'Anglais',
    'pt_BR' => 'Portugais (Brésil)',
    'my' => 'Birman',
    'id' => 'Indonésien',
    'fr' => 'Français',
    'es' => 'Espagnol',
    'de' => 'Allemand',
    'it' => 'Italien',
    'ru' => 'Russe',
    'zh' => 'Chinois',
    'ja' => 'Japonais',
    'ko' => 'Coréen',
    'hi' => 'Hindi',
    'th' => 'Thaïlandais',
    'vi' => 'Vietnamien',
    'fa' => 'Persan',
    'ur' => 'Ourdou',
    'ms' => 'Malais',
    'fil' => 'Philippin',
    'bn' => 'Bengali',
    'pl' => 'Polonais',
    'hu' => 'Hongrois',
    'cs' => 'Tchèque',
    'sk' => 'Slovaque',
    'uk' => 'Ukrainien',
    'el' => 'Grec',
    'ro' => 'Roumain',
    'hr' => 'Croate',
    'sr' => 'Serbe',
    'bg' => 'Bulgare',
    'lt' => 'Lituanien',
    'lv' => 'Letton',
    'et' => 'Estonien',
    'nl' => 'Néerlandais',
    'no' => 'Norvégien',
    'sv' => 'Suédois',
    'da' => 'Danois',
    'key' => 'Langue',
    'value' => 'Valeur',
];
</file>

<file path="resources/lang/hi/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/hr/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/hu/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/ja/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/ko/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/lt/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/lv/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/ms/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/nl/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/no/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/pl/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/ro/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/ru/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/sk/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/sr/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/sv/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/th/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/uk/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/ur/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/vi/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="resources/lang/zh/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Value',
];
</file>

<file path="tests/database/factories/UserFactory.php">
<?php

namespace TomatoPHP\FilamentTranslationComponent\Tests\Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Support\Str;
use TomatoPHP\FilamentTranslationComponent\Tests\Models\User;

class UserFactory extends Factory
{
    protected $model = User::class;

    public function definition(): array
    {
        return [
            'name' => $this->faker->name(),
            'email' => $this->faker->unique()->safeEmail(),
            'email_verified_at' => now(),
            'password' => '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', // password
            'remember_token' => Str::random(10),
        ];
    }
}
</file>

<file path="tests/database/seeders/UserSeed.php">
<?php

namespace TomatoPHP\FilamentTranslationComponent\Tests\Database\Seeders;

use Illuminate\Database\Seeder;
use TomatoPHP\FilamentTranslationComponent\Tests\Models\User;

class UserSeed extends Seeder
{
    /**
     * Seed the application's database.
     */
    public function run(): void
    {
        User::factory()->create([
            'name' => 'Fady Mondy',
            'email' => 'info@3x1.io',
            'password' => bcrypt('password'),
            'email_verified_at' => now(),
        ]);
    }
}
</file>

<file path="tests/src/Models/User.php">
<?php

namespace TomatoPHP\FilamentTranslationComponent\Tests\Models;

use Filament\Models\Contracts\FilamentUser;
use Filament\Panel;
use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use TomatoPHP\FilamentTranslationComponent\Tests\Database\Factories\UserFactory;

class User extends Authenticatable implements FilamentUser, MustVerifyEmail
{
    use HasFactory;
    use Notifiable;

    protected $fillable = [
        'name',
        'email',
        'password',
    ];

    protected $guarded = [];

    protected $hidden = [
        'password',
        'remember_token',
    ];

    public function canAccessPanel(Panel $panel): bool
    {
        return true;
    }

    protected static function newFactory(): UserFactory
    {
        return UserFactory::new();
    }
}
</file>

<file path="tests/src/AdminPanelProvider.php">
<?php

namespace TomatoPHP\FilamentTranslationComponent\Tests;

use Filament\Http\Middleware\Authenticate;
use Filament\Http\Middleware\DisableBladeIconComponents;
use Filament\Http\Middleware\DispatchServingFilamentEvent;
use Filament\Pages;
use Filament\Panel;
use Filament\PanelProvider;
use Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse;
use Illuminate\Cookie\Middleware\EncryptCookies;
use Illuminate\Foundation\Http\Middleware\VerifyCsrfToken;
use Illuminate\Routing\Middleware\SubstituteBindings;
use Illuminate\Session\Middleware\AuthenticateSession;
use Illuminate\Session\Middleware\StartSession;
use Illuminate\View\Middleware\ShareErrorsFromSession;

class AdminPanelProvider extends PanelProvider
{
    public function panel(Panel $panel): Panel
    {
        return $panel
            ->default()
            ->id('admin')
            ->path('admin')
            ->login()
            ->registration()
            ->pages([
                Pages\Dashboard::class,
            ])
            ->middleware([
                EncryptCookies::class,
                AddQueuedCookiesToResponse::class,
                StartSession::class,
                AuthenticateSession::class,
                ShareErrorsFromSession::class,
                VerifyCsrfToken::class,
                SubstituteBindings::class,
                DisableBladeIconComponents::class,
                DispatchServingFilamentEvent::class,
            ])
            ->authMiddleware([
                Authenticate::class,
            ]);
    }
}
</file>

<file path="tests/src/DebugTest.php">
<?php

it('will not use debugging functions', function () {
    expect(['dd', 'dump', 'ray'])->each->not->toBeUsed();
});
</file>

<file path="tests/src/TestCase.php">
<?php

namespace TomatoPHP\FilamentTranslationComponent\Tests;

use BladeUI\Heroicons\BladeHeroiconsServiceProvider;
use BladeUI\Icons\BladeIconsServiceProvider;
use Filament\Actions\ActionsServiceProvider;
use Filament\FilamentServiceProvider;
use Filament\Forms\FormsServiceProvider;
use Filament\Infolists\InfolistsServiceProvider;
use Filament\Notifications\NotificationsServiceProvider;
use Filament\Panel;
use Filament\Schemas\SchemasServiceProvider;
use Filament\Support\SupportServiceProvider;
use Filament\Tables\TablesServiceProvider;
use Filament\Widgets\WidgetsServiceProvider;
use Illuminate\Contracts\Config\Repository;
use Illuminate\Foundation\Testing\LazilyRefreshDatabase;
use Livewire\LivewireServiceProvider;
use Orchestra\Testbench\Attributes\WithEnv;
use Orchestra\Testbench\Concerns\WithWorkbench;
use Orchestra\Testbench\TestCase as BaseTestCase;
use RyanChandler\BladeCaptureDirective\BladeCaptureDirectiveServiceProvider;
use TomatoPHP\FilamentTranslationComponent\FilamentTranslationComponentServiceProvider;
use TomatoPHP\FilamentUsers\Tests\Models\User;

#[WithEnv('DB_CONNECTION', 'testing')]
abstract class TestCase extends BaseTestCase
{
    use LazilyRefreshDatabase;
    use WithWorkbench;

    public ?Panel $panel;

    protected function getPackageProviders($app): array
    {
        $providers = [
            ActionsServiceProvider::class,
            BladeCaptureDirectiveServiceProvider::class,
            BladeHeroiconsServiceProvider::class,
            BladeIconsServiceProvider::class,
            FilamentServiceProvider::class,
            FormsServiceProvider::class,
            SchemasServiceProvider::class,
            InfolistsServiceProvider::class,
            LivewireServiceProvider::class,
            NotificationsServiceProvider::class,
            SupportServiceProvider::class,
            TablesServiceProvider::class,
            WidgetsServiceProvider::class,
            FilamentTranslationComponentServiceProvider::class,
            AdminPanelProvider::class,
        ];

        sort($providers);

        return $providers;
    }

    protected function defineEnvironment($app)
    {

        tap($app['config'], function (Repository $config) {
            $config->set('database.default', 'testing');
            $config->set('database.connections.testing', [
                'driver' => 'sqlite',
                'database' => ':memory:',
                'prefix' => '',
            ]);

            $config->set('auth.guards.testing.driver', 'session');
            $config->set('auth.guards.testing.provider', 'testing');
            $config->set('auth.providers.testing.driver', 'eloquent');
            $config->set('auth.providers.testing.model', User::class);

            $config->set('view.paths', [
                ...$config->get('view.paths'),
                __DIR__ . '/../resources/views',
            ]);
        });
    }
}
</file>

<file path="tests/Pest.php">
<?php

use TomatoPHP\FilamentTranslationComponent\Tests\TestCase;

uses(TestCase::class)->in(__DIR__);
</file>

<file path=".gitignore">
/.phpunit.cache
/node_modules
/public/build
/public/hot
/public/storage
/storage/*.key
/storage/pail
/vendor
.env
.env.backup
.env.production
.phpactor.json
.phpunit.result.cache
.DS_Store
Homestead.json
Homestead.yaml
auth.json
npm-debug.log
yarn-error.log
/.fleet
/.idea
/.vscode
/.zed
</file>

<file path=".php-cs-fixer.dist.php">
<?php

$finder = Symfony\Component\Finder\Finder::create()
    ->notPath('bootstrap/*')
    ->notPath('storage/*')
    ->notPath('resources/view/mail/*')
    ->in([
        __DIR__ . '/src',
        __DIR__ . '/tests',
    ])
    ->name('*.php')
    ->notName('*.blade.php')
    ->ignoreDotFiles(true)
    ->ignoreVCS(true);

return (new PhpCsFixer\Config())
    ->setRules([
        '@PSR2' => true,
        'array_syntax' => ['syntax' => 'short'],
        'ordered_imports' => ['sort_algorithm' => 'alpha'],
        'no_unused_imports' => true,
        'not_operator_with_successor_space' => true,
        'trailing_comma_in_multiline' => true,
        'phpdoc_scalar' => true,
        'unary_operator_spaces' => true,
        'binary_operator_spaces' => true,
        'blank_line_before_statement' => [
            'statements' => ['break', 'continue', 'declare', 'return', 'throw', 'try'],
        ],
        'phpdoc_single_line_var_spacing' => true,
        'phpdoc_var_without_name' => true,
        'method_argument_space' => [
            'on_multiline' => 'ensure_fully_multiline',
            'keep_multiple_spaces_after_comma' => true,
        ]
    ])
    ->setFinder($finder);
</file>

<file path="CODE_OF_CONDUCT.md">
# Contributor Covenant Code of Conduct

## Our Pledge

We as members, contributors, and leaders pledge to make participation in our
community a harassment-free experience for everyone, regardless of age, body
size, visible or invisible disability, ethnicity, sex characteristics, gender
identity and expression, level of experience, education, socio-economic status,
nationality, personal appearance, race, religion, or sexual identity
and orientation.

We pledge to act and interact in ways that contribute to an open, welcoming,
diverse, inclusive, and healthy community.

## Our Standards

Examples of behavior that contributes to a positive environment for our
community include:

* Demonstrating empathy and kindness toward other people
* Being respectful of differing opinions, viewpoints, and experiences
* Giving and gracefully accepting constructive feedback
* Accepting responsibility and apologizing to those affected by our mistakes,
  and learning from the experience
* Focusing on what is best not just for us as individuals, but for the
  overall community

Examples of unacceptable behavior include:

* The use of sexualized language or imagery, and sexual attention or
  advances of any kind
* Trolling, insulting or derogatory comments, and personal or political attacks
* Public or private harassment
* Publishing others' private information, such as a physical or email
  address, without their explicit permission
* Other conduct which could reasonably be considered inappropriate in a
  professional setting

## Enforcement Responsibilities

Community leaders are responsible for clarifying and enforcing our standards of
acceptable behavior and will take appropriate and fair corrective action in
response to any behavior that they deem inappropriate, threatening, offensive,
or harmful.

Community leaders have the right and responsibility to remove, edit, or reject
comments, commits, code, wiki edits, issues, and other contributions that are
not aligned to this Code of Conduct, and will communicate reasons for moderation
decisions when appropriate.

## Scope

This Code of Conduct applies within all community spaces, and also applies when
an individual is officially representing the community in public spaces.
Examples of representing our community include using an official e-mail address,
posting via an official social media account, or acting as an appointed
representative at an online or offline event.

## Enforcement

Instances of abusive, harassing, or otherwise unacceptable behavior may be
reported to the community leaders responsible for enforcement at
.
All complaints will be reviewed and investigated promptly and fairly.

All community leaders are obligated to respect the privacy and security of the
reporter of any incident.

## Enforcement Guidelines

Community leaders will follow these Community Impact Guidelines in determining
the consequences for any action they deem in violation of this Code of Conduct:

### 1. Correction

**Community Impact**: Use of inappropriate language or other behavior deemed
unprofessional or unwelcome in the community.

**Consequence**: A private, written warning from community leaders, providing
clarity around the nature of the violation and an explanation of why the
behavior was inappropriate. A public apology may be requested.

### 2. Warning

**Community Impact**: A violation through a single incident or series
of actions.

**Consequence**: A warning with consequences for continued behavior. No
interaction with the people involved, including unsolicited interaction with
those enforcing the Code of Conduct, for a specified period of time. This
includes avoiding interactions in community spaces as well as external channels
like social media. Violating these terms may lead to a temporary or
permanent ban.

### 3. Temporary Ban

**Community Impact**: A serious violation of community standards, including
sustained inappropriate behavior.

**Consequence**: A temporary ban from any sort of interaction or public
communication with the community for a specified period of time. No public or
private interaction with the people involved, including unsolicited interaction
with those enforcing the Code of Conduct, is allowed during this period.
Violating these terms may lead to a permanent ban.

### 4. Permanent Ban

**Community Impact**: Demonstrating a pattern of violation of community
standards, including sustained inappropriate behavior,  harassment of an
individual, or aggression toward or disparagement of classes of individuals.

**Consequence**: A permanent ban from any sort of public interaction within
the community.

## Attribution

This Code of Conduct is adapted from the [Contributor Covenant][homepage],
version 2.0, available at
https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.

Community Impact Guidelines were inspired by [Mozilla's code of conduct
enforcement ladder](https://github.com/mozilla/diversity).

[homepage]: https://www.contributor-covenant.org

For answers to common questions about this code of conduct, see the FAQ at
https://www.contributor-covenant.org/faq. Translations are available at
https://www.contributor-covenant.org/translations.
</file>

<file path="fadymondy-translation-component.md">
---
name: Translation Component
slug: fadymondy-tomato-translation-component
author_slug: fadymondy
categories: [developer-tool]
description: Translation Component as a key/value to use it with Spatie Translatable FilamentPHP Plugin
discord_url:
docs_url: https://raw.githubusercontent.com/tomatophp/filament-translation-component/master/README.md
github_repository: tomatophp/filament-translation-component
has_dark_theme: true
has_translations: true
versions: [3,4]
publish_date: 2024-07-10
---
</file>

<file path="LICENSE.md">
The MIT License (MIT)

Copyright (c)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
</file>

<file path="phpunit.xml">
<?xml version="1.0" encoding="UTF-8"?>
<phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         backupGlobals="false"
         bootstrap="vendor/autoload.php"
         colors="true"
         processIsolation="false"
         stopOnFailure="false"
         xsi:noNamespaceSchemaLocation="https://schema.phpunit.de/10.3/phpunit.xsd"
         cacheDirectory=".phpunit.cache"
         backupStaticProperties="false"
>
    <testsuites>
        <testsuite name="Tests">
            <directory suffix=".php">./tests/</directory>
        </testsuite>
    </testsuites>
    <source>
        <include>
            <directory suffix=".php">./src</directory>
        </include>
    </source>
    <php>
        <env name="APP_KEY" value="base64:yk+bUVuZa1p86Dqjk9OjVK2R1pm6XHxC6xEKFq8utH0="/>
        <env name="DB_CONNECTION" value="testing"/>
    </php>
</phpunit>
</file>

<file path="pint.json">
{
    "preset": "laravel",
    "rules": {
        "blank_line_before_statement": true,
        "concat_space": {
            "spacing": "one"
        },
        "method_argument_space": true,
        "single_trait_insert_per_statement": true,
        "types_spaces": {
            "space": "single"
        }
    }
}
</file>

<file path="testbench.yaml">
providers:
  - BladeUI\Icons\BladeIconsServiceProvider
  - BladeUI\Heroicons\BladeHeroiconsServiceProvider
  - Filament\Actions\ActionsServiceProvider
  - Filament\FilamentServiceProvider
  - Filament\Forms\FormsServiceProvider
  - Filament\Infolists\InfolistsServiceProvider
  - Filament\Notifications\NotificationsServiceProvider
  - Filament\Support\SupportServiceProvider
  - Filament\Tables\TablesServiceProvider
  - Filament\Widgets\WidgetsServiceProvider
  - Filament\Schemas\SchemasServiceProvider
  - RyanChandler\BladeCaptureDirective\BladeCaptureDirectiveServiceProvider
  - TomatoPHP\FilamentTranslationComponent\FilamentTranslationComponentServiceProvider
  - TomatoPHP\FilamentTranslationComponent\Tests\AdminPanelProvider

workbench:
  welcome: true
  install: true
  start: /
  guard: testing
  discovers:
    web: true
    api: false
    commands: false
    views: true
</file>

<file path=".github/workflows/tests.yml">
name: "Tests"

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - '**.php'
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - master
    paths:
      - '**.php'
      - '.github/workflows/tests.yml'
      - 'phpunit.xml.dist'
      - 'composer.json'
      - 'composer.lock'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        php: [8.4, 8.3, 8.2]
        laravel: [12.*, 11.*]
        stability: [prefer-stable]
        include:
          - laravel: 12.*
            testbench: 10.*
            carbon: 3.*
            collision: 8.*
          - laravel: 11.*
            testbench: 9.*
            carbon: 3.*
            collision: 8.*
        exclude:
          - laravel: 11.*
            php: 8.1
    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Install Dependencies
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install Dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" "nesbot/carbon:${{ matrix.carbon }}" "nunomaduro/collision:${{ matrix.collision }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction
          composer db

      - name: Execute tests
        run: vendor/bin/pest
</file>

<file path=".github/FUNDING.yml">
github: [fadymondy]
</file>

<file path="resources/lang/id/messages.php">
<?php

return [
    'ar' => 'Arab',
    'en' => 'Inggris',
    'pt_BR' => 'Portugis (Brasil)',
    'my' => 'Burma',
    'id' => 'Indonesia',
    'fr' => 'Perancis',
    'es' => 'Spanyol',
    'de' => 'Jerman',
    'it' => 'Itali',
    'ru' => 'Rusia',
    'zh' => 'Cina',
    'ja' => 'Jepang',
    'ko' => 'Korea',
    'hi' => 'Hindi',
    'th' => 'Thailand',
    'vi' => 'Vietnam',
    'fa' => 'Persia',
    'ur' => 'Arab',
    'ms' => 'Melayu',
    'fil' => 'Filipina',
    'bn' => 'Bengali',
    'pl' => 'Polandia',
    'hu' => 'Hungaria',
    'cs' => 'Ceko',
    'sk' => 'Slovakia',
    'uk' => 'Ukraina',
    'el' => 'Yunani',
    'ro' => 'Rumania',
    'hr' => 'Kroasia',
    'sr' => 'Serbia',
    'bg' => 'Bulgaria',
    'lt' => 'Lituania',
    'lv' => 'Letonia',
    'et' => 'Estonia',
    'nl' => 'Belanda',
    'no' => 'Norwegia',
    'sv' => 'Swedia',
    'da' => 'Denmark',
    'key' => 'Bahasa',
    'value' => 'Nilai',
];
</file>

<file path=".github/workflows/fix-php-code-styling.yml">
name: 'PHP Code Styling'

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - '**.php'

permissions:
  contents: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}

      - name: Fix PHP code style issues
        uses: aglipanci/laravel-pint-action@v2

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: "Format Code"
          commit_user_name: 'GitHub Actions'
</file>

<file path="resources/lang/my/messages.php">
<?php

return [
    'ar' => 'အာရဗီ',
    'en' => 'အင်္ဂလိပ်',
    'pt_BR' => 'ပေါ်တူဂီ (ဘရာဇီ)',
    'my' => 'မြန်မာ',
    'id' => 'အင်ဒိုနီးရှား',
    'fr' => 'ပြင်သစ်',
    'es' => 'စပိန်',
    'de' => 'ဂျာမန်',
    'it' => 'အီတလီးယန်',
    'ru' => 'ရုရှား',
    'zh' => 'တရုတ်',
    'ja' => 'ဂျပန်',
    'ko' => 'ကိုရီးယား',
    'hi' => 'ဟိန္ဒီ',
    'th' => 'ထိုင်း',
    'vi' => 'ဗီယက်နမ်',
    'fa' => 'ပါရှန်',
    'ur' => 'အူရဒီ',
    'ms' => 'မလေး',
    'fil' => 'ဖိလစ်ပိုင်',
    'bn' => 'ဘင်္ဂလား',
    'pl' => 'ပိုလန်',
    'hu' => 'ဟန်ဂေရီ',
    'cs' => 'ချက်',
    'sk' => 'စလိုဗီယန်',
    'uk' => 'ယူကရိန်',
    'el' => 'ဂရိ',
    'ro' => 'ရိုမေးနီးယား',
    'hr' => 'ခရိုအေးရှား',
    'sr' => 'ဆားဘီးယား',
    'bg' => 'ဘူဂေးရီးယား',
    'lt' => 'လီသူဝန်း',
    'lv' => 'လတ်ဗီးယား',
    'et' => 'အက်စတိုး',
    'nl' => 'နယ်ပယ်',
    'no' => 'နော်ဝေး',
    'sv' => 'ဆွီဒီးယန်',
    'da' => 'ဒိန်းမတ်း',
    'key' => 'ဘာသာရပ်',
    'value' => 'တန်ဖိုး',
];
</file>

<file path="resources/lang/pt_BR/messages.php">
<?php

return [
    'ar' => 'árabe',
    'en' => 'Inglês',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'birmanês',
    'id' => 'Indonésio',
    'fr' => 'Francês',
    'es' => 'Espanhol',
    'de' => 'Alemão',
    'it' => 'Italiano',
    'ru' => 'Russo',
    'zh' => 'Chinês',
    'ja' => 'Japonês',
    'ko' => 'Coreano',
    'hi' => 'Hindi',
    'th' => 'Tailandês',
    'vi' => 'Vietnamita',
    'fa' => 'Persa',
    'ur' => 'Urdu',
    'ms' => 'Malaio',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polonês',
    'hu' => 'Húngaro',
    'cs' => 'Tcheco',
    'sk' => 'Eslovaco',
    'uk' => 'Ucraniano',
    'el' => 'Grego',
    'ro' => 'Romeno',
    'hr' => 'Croata',
    'sr' => 'Sérvio',
    'bg' => 'Búlgaro',
    'lt' => 'Lituano',
    'lv' => 'Letão',
    'et' => 'Estoniano',
    'nl' => 'Holandês',
    'no' => 'Norueguês',
    'sv' => 'Sueco',
    'da' => 'Dinamarquês',
    'fi' => 'Finlandês',
    'key' => 'Língua',
    'value' => 'Valor',
];
</file>

<file path="resources/views/components/translation.blade.php">
@php
    $fieldWrapperView = $getFieldWrapperView();
    $extraAttributeBag = $getExtraAttributeBag();
    $canEditKeys = $canEditKeys();
    $canEditValues = $canEditValues();
    $keyPlaceholder = $getKeyPlaceholder();
    $valuePlaceholder = $getValuePlaceholder();
    $debounce = $getLiveDebounce();
    $hasInlineLabel = $hasInlineLabel();
    $isAddable = $isAddable();
    $isDeletable = $isDeletable();
    $isDisabled = $isDisabled();
    $isReorderable = $isReorderable();
    $statePath = $getStatePath();
    $livewireKey = $getLivewireKey();

    $textarea = $isTextarea();
@endphp

<x-dynamic-component
    :component="$fieldWrapperView"
    :field="$field"
    :has-inline-label="$hasInlineLabel"
    class="fi-fo-key-value-wrp"
>
    <x-filament::input.wrapper
        :disabled="$isDisabled"
        :valid="! $errors->has($statePath)"
        :attributes="
            \Filament\Support\prepare_inherited_attributes($extraAttributeBag)
                ->class(['fi-fo-key-value'])
        "
    >
        <div
            x-load
            x-load-src="{{ \Filament\Support\Facades\FilamentAsset::getAlpineComponentSrc('key-value', 'filament/forms') }}"
            x-data="keyValueFormComponent({
                        state: $wire.{{ $applyStateBindingModifiers("\$entangle('{$statePath}')") }},
                    })"
            wire:ignore
            wire:key="{{ $livewireKey }}.{{
                substr(md5(serialize([
                    $isDisabled,
                ])), 0, 64)
            }}"
            {{
                $attributes
                    ->merge($getExtraAlpineAttributes(), escape: false)
                    ->class(['fi-fo-key-value-table-ctn'])
            }}
        >
            <table class="fi-fo-key-value-table">
                <thead>
                    <tr>
                        @if ($isReorderable && (! $isDisabled))
                            <th
                                scope="col"
                                x-show="rows.length"
                                class="fi-has-action"
                            ></th>
                        @endif

                        <th scope="col">
                            {{ $getKeyLabel() }}
                        </th>

                        <th scope="col">
                            {{ $getValueLabel() }}
                        </th>

                        @if ($isDeletable && (! $isDisabled))
                            <th
                                scope="col"
                                x-show="rows.length"
                                class="fi-has-action"
                            ></th>
                        @endif
                    </tr>
                </thead>

                <tbody
                    @if ($isReorderable)
                        x-on:end.stop="reorderRows($event)"
                        x-sortable
                        data-sortable-animation-duration="{{ $getReorderAnimationDuration() }}"
                    @endif
                >
                    <template
                        x-bind:key="index"
                        x-for="(row, index) in rows"
                    >
                        <tr
                            @if ($isReorderable)
                                x-bind:x-sortable-item="row.key"
                            @endif
                        >
                            @if ($isReorderable && (! $isDisabled))
                                <td class="fi-has-action">
                                    <div
                                        x-sortable-handle
                                        class="fi-fo-key-value-table-row-sortable-handle"
                                    >
                                        {{ $getAction('reorder') }}
                                    </div>
                                </td>
                            @endif

                            <td>
                                @php
                                    $langLabels = [];
                                    foreach (config('filament-translation-component.languages') as $key=>$langItem){
                                        $langLabels[$key] = [
                                            'label' => trans('filament-translation-component::messages.'.$key),
                                            'flag' => $langItem['flag']
                                        ];
                                    }
                                @endphp
                                <div x-data="{lang: '{{ json_encode($langLabels) }}'}" class="fi-sidebar-group-btn" style="padding-left: 16px; padding-right: 16px;">
                                    <div class="flex flex-col justify-center items-center">
                                        <x-filament::avatar x-bind:src="'https://cdn.jsdelivr.net/gh/hampusborgos/country-flags@main/svg/'+JSON.parse(lang)[row.key].flag+'.svg'" :circular="false" size="sm" />
                                    </div>
                                    <div class="font-xs">
                                        <b x-html="JSON.parse(lang)[row.key].label"></b>
                                    </div>
                                </div>
                            </td>

                            <td class="border">
                                @if($textarea)
                                <textarea
                                    @disabled((! $canEditValues) || $isDisabled)
                                    placeholder="{{ $valuePlaceholder }}"
                                    type="text"
                                    x-model="row.value"
                                    x-on:input.debounce.{{ $debounce ?? '500ms' }}="updateState"
                                    class="fi-input"
                                    style="resize: none; width: 100%; padding-top: 5px;padding-bottom: 5px;padding-left: 16px; padding-right: 16px; outline: none; border: none; height: auto;"
                                    rows="3"
                                ></textarea>
                                @else
                                <input
                                    @disabled((! $canEditValues) || $isDisabled)
                                    placeholder="{{ $valuePlaceholder }}"
                                    type="text"
                                    x-model="row.value"
                                    x-on:input.debounce.{{ $debounce ?? '500ms' }}="updateState"
                                    class="fi-input"
                                />
                                @endif
                            </td>

                            @if ($isDeletable && (! $isDisabled))
                                <td class="fi-has-action">
                                    <div x-on:click="deleteRow(index)">
                                        {{ $getAction('delete') }}
                                    </div>
                                </td>
                            @endif
                        </tr>
                    </template>
                </tbody>
            </table>

            @if ($isAddable && (! $isDisabled))
                <div
                    x-on:click="addRow"
                    class="fi-fo-key-value-add-action-ctn"
                >
                    {{ $getAction('add') }}
                </div>
            @endif
        </div>
    </x-filament::input.wrapper>
</x-dynamic-component>
</file>

<file path="src/FilamentTranslationComponentServiceProvider.php">
<?php

namespace TomatoPHP\FilamentTranslationComponent;

use Illuminate\Support\ServiceProvider;

class FilamentTranslationComponentServiceProvider extends ServiceProvider
{
    public function register(): void
    {
        // Register Config file
        $this->mergeConfigFrom(__DIR__ . '/../config/filament-translation-component.php', 'filament-translation-component');

        // Publish Config
        $this->publishes([
            __DIR__ . '/../config/filament-translation-component.php' => config_path('filament-translation-component.php'),
        ], 'filament-translation-component-config');

        // Register Lang
        $this->loadTranslationsFrom(__DIR__ . '/../resources/lang', 'filament-translation-component');

        // Publish Lang
        $this->publishes([
            __DIR__ . '/../resources/lang' => base_path('lang/vendor/filament-translation-component'),
        ], 'filament-translation-component-lang');

        // Register views
        $this->loadViewsFrom(__DIR__ . '/../resources/views', 'filament-translation-component');

        // Publish Views
        $this->publishes([
            __DIR__ . '/../resources/views' => resource_path('views/vendor/filament-translation-component'),
        ], 'filament-translation-component-views');

    }

    public function boot(): void
    {
        // you boot methods here
    }
}
</file>

<file path="config/filament-translation-component.php">
<?php

return [
    'languages' => [
        'en' => [
            'label' => 'English',
            'flag' => 'us',
        ],
        'ar' => [
            'label' => 'Arabic',
            'flag' => 'eg',
        ],
        'pt_BR' => [
            'label' => 'Português (Brasil)',
            'flag' => 'br',
        ],
        'my' => [
            'label' => 'Burmese',
            'flag' => 'mm',
        ],
        'id' => [
            'label' => 'Indonesian',
            'flag' => 'id',
        ],
    ],
];
</file>

<file path="resources/lang/it/messages.php">
<?php

return [
    'ar' => 'Arabo',
    'en' => 'Inglese',
    'pt_BR' => 'Portoghese (Brasile)',
    'my' => 'Birmano',
    'id' => 'Indonesiano',
    'fr' => 'Francese',
    'es' => 'Spagnolo',
    'de' => 'Tedesco',
    'it' => 'Italiano',
    'ru' => 'Russo',
    'zh' => 'Cinese',
    'ja' => 'Giapponese',
    'ko' => 'Coreano',
    'hi' => 'Hindi',
    'th' => 'Tailandese',
    'vi' => 'Vietnamita',
    'fa' => 'Persiano',
    'ur' => 'Urdu',
    'ms' => 'Malese',
    'fil' => 'Filippino',
    'bn' => 'Bengalese',
    'pl' => 'Polacco',
    'hu' => 'Ungherese',
    'cs' => 'Ceco',
    'sk' => 'Slovacco',
    'uk' => 'Ucraino',
    'el' => 'Greco',
    'ro' => 'Rumeno',
    'hr' => 'Croato',
    'sr' => 'Serbo',
    'bg' => 'Bulgaro',
    'lt' => 'Lituano',
    'lv' => 'Lettone',
    'et' => 'Estone',
    'nl' => 'Olandese',
    'no' => 'Norvegese',
    'sv' => 'Svedese',
    'da' => 'Danese',
    'key' => 'Lingua',
    'value' => 'Valore',
];
</file>

<file path="resources/lang/ar/messages.php">
<?php

return [
    'ar' => 'العربية',
    'en' => 'الانجليزية',
    'pt_BR' => 'البرتغالية (البرازيل)',
    'my' => 'البورمية',
    'id' => 'الإندونيسية',
    'fr' => 'الفرنسية',
    'es' => 'الإسبانية',
    'de' => 'الألمانية',
    'it' => 'الإيطالية',
    'ru' => 'الروسية',
    'zh' => 'الصينية',
    'ja' => 'اليابانية',
    'ko' => 'الكورية',
    'hi' => 'الهندية',
    'th' => 'التايلاندية',
    'vi' => 'الفيتنامية',
    'fa' => 'الفارسية',
    'ur' => 'الأوردية',
    'ms' => 'الماليزية',
    'fil' => 'الفلبينية',
    'bn' => 'البنغالية',
    'pl' => 'البولندية',
    'hu' => 'المجرية',
    'cs' => 'التشيكية',
    'sk' => 'السلوفاكية',
    'uk' => 'الأوكرانية',
    'el' => 'اليونانية',
    'ro' => 'الرومانية',
    'hr' => 'الكرواتية',
    'sr' => 'الصربية',
    'bg' => 'البلغارية',
    'lt' => 'الليتوانية',
    'lv' => 'اللاتفية',
    'et' => 'الإستونية',
    'nl' => 'الهولندية',
    'no' => 'النرويجية',
    'sv' => 'السويدية',
    'da' => 'الدانماركية',
    'key' => 'اللغة',
    'value' => 'الترجمة',
];
</file>

<file path="resources/lang/en/messages.php">
<?php

return [
    'ar' => 'Arabic',
    'en' => 'English',
    'pt_BR' => 'Português (Brasil)',
    'my' => 'Burmese',
    'id' => 'Indonesian',
    'fr' => 'French',
    'es' => 'Spanish',
    'de' => 'German',
    'it' => 'Italian',
    'ru' => 'Russian',
    'zh' => 'Chinese',
    'ja' => 'Japanese',
    'ko' => 'Korean',
    'hi' => 'Hindi',
    'th' => 'Thai',
    'vi' => 'Vietnamese',
    'fa' => 'Persian',
    'ur' => 'Urdu',
    'ms' => 'Malay',
    'fil' => 'Filipino',
    'bn' => 'Bengali',
    'pl' => 'Polish',
    'hu' => 'Hungarian',
    'cs' => 'Czech',
    'sk' => 'Slovak',
    'uk' => 'Ukrainian',
    'el' => 'Greek',
    'ro' => 'Romanian',
    'hr' => 'Croatian',
    'sr' => 'Serbian',
    'bg' => 'Bulgarian',
    'lt' => 'Lithuanian',
    'lv' => 'Latvian',
    'et' => 'Estonian',
    'nl' => 'Dutch',
    'no' => 'Norwegian',
    'sv' => 'Swedish',
    'da' => 'Danish',
    'key' => 'Language',
    'value' => 'Translation',
];
</file>

<file path="src/Components/Translation.php">
<?php

namespace TomatoPHP\FilamentTranslationComponent\Components;

use Illuminate\Support\Arr;
use Filament\Forms\Components\KeyValue;

class Translation extends KeyValue
{
    protected string $view = 'filament-translation-component::components.translation';

    public array $lang = [];

    public bool $textarea = false;

    protected function setUp(): void
    {
        $this->keyLabel(trans('filament-translation-component::messages.key'));
        $this->valueLabel(trans('filament-translation-component::messages.value'));
        $this->editableKeys(false);
        $this->addable(false);
        $this->deletable(false);
        $this->formatStateUsing(fn($state) => $this->getTranslatedLocales($state));
        $this->default(fn () => $this->getTranslatedLocales());
    }

    public function getTranslatedLocales($state = null): array
    {
        if($state) {
            return collect(config('filament-translation-component.languages'))->mapWithKeys(function ($item, $key) use ($state) {
                if(collect($state)->has($key)) {
                    return [$key => collect($state)->get($key)];
                }
                return [$key => ''];
            })->toArray();
        }
        else {
            return collect(config('filament-translation-component.languages'))->mapWithKeys(function ($item, $key) {
                return [$key => ''];
            })->toArray();
        }

    }

    public function lang(array $lang): static
    {
        $this->lang = $lang;

        return $this;
    }

    public function getLang(): array
    {
        return $this->lang;
    }

    public function textarea(bool $value = true): static
    {
        $this->textarea = $value;

        return $this;
    }

    public function isTextarea(): bool
    {
        return $this->textarea;
    }
}
</file>

<file path="composer.json">
{
    "name": "tomatophp/filament-translation-component",
    "type": "library",
    "description": "Translation Component as a key/value to use it with Spatie Translatable FilamentPHP Plugin",
    "keywords": [
        "php",
        "laravel",
        "filamentphp",
        "translation",
        "component",
        "key/value",
        "spatie",
        "translatable"
    ],
    "license": "MIT",
    "autoload": {
        "psr-4": {
            "TomatoPHP\\FilamentTranslationComponent\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "TomatoPHP\\FilamentTranslationComponent\\Tests\\": "tests/src/",
            "TomatoPHP\\FilamentTranslationComponent\\Tests\\Database\\Factories\\": "tests/database/factories"
        }
    },
    "extra": {
        "laravel": {
            "providers": [
                "TomatoPHP\\FilamentTranslationComponent\\FilamentTranslationComponentServiceProvider"
            ]
        }
    },
    "authors": [
        {
            "name": "Fady Mondy",
            "email": "info@3x1.io"
        }
    ],
    "scripts": {
        "testbench": "vendor/bin/testbench package:discover --ansi",
        "db": "vendor/bin/testbench package:create-sqlite-db && vendor/bin/testbench migrate",
        "analyse": "vendor/bin/phpstan analyse src tests",
        "test": "vendor/bin/pest",
        "test-coverage": "vendor/bin/pest --coverage",
        "format": "vendor/bin/pint"
    },
    "config": {
        "sort-packages": true,
        "allow-plugins": {
            "pestphp/pest-plugin": true,
            "phpstan/extension-installer": true
        }
    },
    "require": {
        "php": "^8.2|^8.3|^8.4",
        "tomatophp/console-helpers": "^1.1",
        "filament/filament": "^4.0",
        "lara-zeus/spatie-translatable": "^1.0"
    },
    "require-dev": {
        "larastan/larastan": "^2.9||^3.0",
        "laravel/pint": "^1.14",
        "nunomaduro/collision": "^8.1.1||^7.10.0",
        "orchestra/testbench": "^10.0.0||^9.0.0",
        "pestphp/pest": "^3.0",
        "pestphp/pest-plugin-arch": "^3.0",
        "pestphp/pest-plugin-laravel": "^3.0",
        "pestphp/pest-plugin-livewire": "^3.0",
        "pestphp/pest-plugin-type-coverage": "^3.5",
        "phpstan/extension-installer": "^1.3||^2.0",
        "phpstan/phpstan-deprecation-rules": "^1.1||^2.0",
        "phpstan/phpstan-phpunit": "^1.3||^2.0"
    },
    "version": "v4.0.1"
}
</file>

<file path="README.md">
![Cover](https://raw.githubusercontent.com/tomatophp/filament-translation-component/master/arts/fadymondy-tomato-translation-component.jpg)

# Filament Translation Component

[![Dependabot Updates](https://github.com/tomatophp/filament-translation-component/actions/workflows/dependabot/dependabot-updates/badge.svg)](https://github.com/tomatophp/filament-translation-component/actions/workflows/dependabot/dependabot-updates)
[![PHP Code Styling](https://github.com/tomatophp/filament-translation-component/actions/workflows/fix-php-code-styling.yml/badge.svg)](https://github.com/tomatophp/filament-translation-component/actions/workflows/fix-php-code-styling.yml)
[![Tests](https://github.com/tomatophp/filament-translation-component/actions/workflows/tests.yml/badge.svg)](https://github.com/tomatophp/filament-translation-component/actions/workflows/tests.yml)
[![Latest Stable Version](https://poser.pugx.org/tomatophp/filament-translation-component/version.svg)](https://packagist.org/packages/tomatophp/filament-translation-component)
[![PHP Version Require](http://poser.pugx.org/tomatophp/filament-translation-component/require/php)](https://packagist.org/packages/tomatophp/filament-translation-component)
[![License](https://poser.pugx.org/tomatophp/filament-translation-component/license.svg)](https://packagist.org/packages/tomatophp/filament-translation-component)
[![Downloads](https://poser.pugx.org/tomatophp/filament-translation-component/d/total.svg)](https://packagist.org/packages/tomatophp/filament-translation-component)

Translation Component as a key/value to use it with Spatie Translatable FilamentPHP Plugin

## Screenshots

![Light Textarea](https://raw.githubusercontent.com/tomatophp/filament-translation-component/master/arts/textarea-light.png)
![Dark Textarea](https://raw.githubusercontent.com/tomatophp/filament-translation-component/master/arts/textarea-dark.png)
![Light Input](https://raw.githubusercontent.com/tomatophp/filament-translation-component/master/arts/input-light.png)
![Dark Input](https://raw.githubusercontent.com/tomatophp/filament-translation-component/master/arts/input-dark.png)


## Installation

```bash
composer require tomatophp/filament-translation-component
```

## Using

you can use the component on your form like this

```php
use \TomatoPHP\FilamentTranslationComponent\Components\Translation;

Translation::make('title')
    ->label('Title')
```

you can change the language from the config file.

## Convert input to textarea

```php
use \TomatoPHP\FilamentTranslationComponent\Components\Translation;

Translation::make('title')
    ->label('Title')
    ->textarea()
```



## Publish Assets

you can publish config file by use this command

```bash
php artisan vendor:publish --tag="filament-translation-component-config"
```

you can publish languages file by use this command

```bash
php artisan vendor:publish --tag="filament-translation-component-lang"
```


## Testing

if you like to run `PEST` testing just use this command

```bash
composer test
```

## Code Style

if you like to fix the code style just use this command

```bash
composer format
```

## PHPStan

if you like to check the code by `PHPStan` just use this command

```bash
composer analyse
```

## Other Filament Packages

Checkout our [Awesome TomatoPHP](https://github.com/tomatophp/awesome)
</file>

</files>
